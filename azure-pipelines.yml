name: $(BuildID)-$(Build.SourceBranchName)

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Database
    steps:
    - script: ./build.sh --target pack-db --pack-version-postfix $(Build.BuildId)
    - publish: packs
      artifact: itlab-database-nuget

  - job: Backend
    steps:
    - script: ./build.sh --build-id $(Build.BuildId)
    - publish: deploy
      artifact: itlab-back
- stage: packInDocker
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: packApi
    steps:
      - checkout: none
      - download: current
        artifact: itlab-back
      - task: Docker@2
        inputs:
          containerRegistry: 'rtuitlab connection by admin'
          repository: 'rtuitlab/itlab-back'
          command: 'buildAndPush'
          Dockerfile: '$(Pipeline.Workspace)/itlab-back/Dockerfile'
          buildContext: '$(Pipeline.Workspace)/itlab-back'
          tags: |
            $(Build.BuildId)
            latest
- stage: UpdateService
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - task: SSH@0
              inputs:
                sshEndpoint: 'swarm manager'
                runOptions: 'commands'
                commands: 'docker service update --image rtuitlab/itlab-back:$(Build.BuildId) itlab_back'
                readyTimeout: '20000'
